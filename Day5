public class TreeNode {
     int val;
     TreeNode left;
      TreeNode right;
      TreeNode() {}
      TreeNode(int val) { this.val = val; }
      TreeNode(int val, TreeNode left, TreeNode right) {
          this.val = val;
          this.left = left;
          this.right = right;
      }
  }
class Solution {
  
    private int maxSum = Integer.MIN_VALUE;
    
    public int maxPathSum(TreeNode root) {
    
        calculateMaxPath(root);
        return maxSum;
    }

   
    private int calculateMaxPath(TreeNode node) {
        if (node == null) {
            
            return 0;
        }

        
        int leftMax = Math.max(calculateMaxPath(node.left), 0);
        int rightMax = Math.max(calculateMaxPath(node.right), 0);

        
        int currentPathSum = node.val + leftMax + rightMax;

        
        maxSum = Math.max(maxSum, currentPathSum);

        
        return node.val + Math.max(leftMax, rightMax);
    }
}
