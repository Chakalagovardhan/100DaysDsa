class Solution {
    public static int maxSumSubarray(int arr[]) {
        int n = arr.length;
        int[] leftMax = new int[n];
        int[] rightMax = new int[n];
        
        leftMax[0] = arr[0];
        int maxSum = arr[0];
        for (int i = 1; i < n; i++) {
            leftMax[i] = Math.max(arr[i], leftMax[i - 1] + arr[i]);
            maxSum = Math.max(maxSum, leftMax[i]);
        }
        
        rightMax[n - 1] = arr[n - 1];
        for (int i = n - 2; i >= 0; i--) {
            rightMax[i] = Math.max(arr[i], rightMax[i + 1] + arr[i]);
        }
        
        for (int i = 1; i < n - 1; i++) {
            maxSum = Math.max(maxSum, leftMax[i - 1] + rightMax[i + 1]);
        }
        
        return maxSum;
    }
}
